{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/agrad/Documents/GitHub/Linkup/app/api/dashboard/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\"\r\n\r\nexport async function GET(request) {\r\n  try {\r\n    const token = request.headers.get(\"Authorization\")?.split(\" \")[1]\r\n    if (!token) {\r\n      return NextResponse.json({ error: \"No token provided\" }, { status: 401 })\r\n    }\r\n\r\n    const backendUrl = process.env.BACKEND_URL || \"https://linkup-back.vercel.app\"\r\n    console.log(\"Backend URL:\", backendUrl)\r\n    console.log(\"Full endpoint:\", `${backendUrl}/api/dashboard`)\r\n\r\n    console.log(\"Sending request to backend...\")\r\n    const response = await fetch(`${backendUrl}/api/dashboard`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json()\r\n      console.error(\"Error response from backend:\", errorData)\r\n      return NextResponse.json(\r\n        { error: errorData.error || \"Error fetching dashboard data\" },\r\n        { status: response.status },\r\n      )\r\n    }\r\n\r\n    const dashboardData = await response.json()\r\n    console.log(\"Dashboard data received:\", JSON.stringify(dashboardData, null, 2))\r\n\r\n    return NextResponse.json(dashboardData)\r\n  } catch (error) {\r\n    console.error(\"Error fetching dashboard data:\", error)\r\n    return NextResponse.json({ error: \"Internal server error\" }, { status: 500 })\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,IAAI,OAAO;IAC/B,IAAI;QACF,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,kBAAkB,MAAM,IAAI,CAAC,EAAE;QACjE,IAAI,CAAC,OAAO;YACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAoB,GAAG;gBAAE,QAAQ;YAAI;QACzE;QAEA,MAAM,aAAa,sEAA2B;QAC9C,QAAQ,GAAG,CAAC,gBAAgB;QAC5B,QAAQ,GAAG,CAAC,kBAAkB,GAAG,WAAW,cAAc,CAAC;QAE3D,QAAQ,GAAG,CAAC;QACZ,MAAM,WAAW,MAAM,MAAM,GAAG,WAAW,cAAc,CAAC,EAAE;YAC1D,QAAQ;YACR,SAAS;gBACP,eAAe,CAAC,OAAO,EAAE,OAAO;gBAChC,gBAAgB;YAClB;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO,UAAU,KAAK,IAAI;YAAgC,GAC5D;gBAAE,QAAQ,SAAS,MAAM;YAAC;QAE9B;QAEA,MAAM,gBAAgB,MAAM,SAAS,IAAI;QACzC,QAAQ,GAAG,CAAC,4BAA4B,KAAK,SAAS,CAAC,eAAe,MAAM;QAE5E,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}