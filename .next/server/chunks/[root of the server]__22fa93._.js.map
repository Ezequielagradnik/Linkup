{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/agrad/Documents/GitHub/Linkup/app/api/apply/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\"\r\n\r\nexport async function POST(req) {\r\n  console.log(\"POST request received in frontend apply route handler\")\r\n  try {\r\n    const applicationData = await req.json()\r\n    console.log(\"Raw application data:\", JSON.stringify(applicationData, null, 2))\r\n\r\n    const backendUrl = process.env.BACKEND_URL || \"https://linkup-backend.vercel.app\"\r\n    const endpoint = `${backendUrl}/api/apply`\r\n\r\n    console.log(\"Backend URL:\", backendUrl)\r\n    console.log(\"Full endpoint:\", endpoint)\r\n\r\n    console.log(\"Sending request to backend...\")\r\n    const response = await fetch(endpoint, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(applicationData),\r\n    })\r\n\r\n    console.log(\"Response status:\", response.status)\r\n    console.log(\"Response headers:\", Object.fromEntries(response.headers.entries()))\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text()\r\n      console.error(\"Error response:\", errorText)\r\n      return NextResponse.json({ error: `Failed to submit application: ${errorText}` }, { status: response.status })\r\n    }\r\n\r\n    const data = await response.json()\r\n    console.log(\"Success response:\", data)\r\n    return NextResponse.json(data)\r\n  } catch (error) {\r\n    console.error(\"Error in apply route handler:\", error)\r\n    return NextResponse.json(\r\n      { error: \"An unexpected error occurred while processing your application\" },\r\n      { status: 500 },\r\n    )\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,GAAG;IAC5B,QAAQ,GAAG,CAAC;IACZ,IAAI;QACF,MAAM,kBAAkB,MAAM,IAAI,IAAI;QACtC,QAAQ,GAAG,CAAC,yBAAyB,KAAK,SAAS,CAAC,iBAAiB,MAAM;QAE3E,MAAM,aAAa,QAAQ,GAAG,CAAC,WAAW,IAAI;QAC9C,MAAM,WAAW,GAAG,WAAW,UAAU,CAAC;QAE1C,QAAQ,GAAG,CAAC,gBAAgB;QAC5B,QAAQ,GAAG,CAAC,kBAAkB;QAE9B,QAAQ,GAAG,CAAC;QACZ,MAAM,WAAW,MAAM,MAAM,UAAU;YACrC,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,QAAQ,GAAG,CAAC,oBAAoB,SAAS,MAAM;QAC/C,QAAQ,GAAG,CAAC,qBAAqB,OAAO,WAAW,CAAC,SAAS,OAAO,CAAC,OAAO;QAE5E,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,QAAQ,KAAK,CAAC,mBAAmB;YACjC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,CAAC,8BAA8B,EAAE,WAAW;YAAC,GAAG;gBAAE,QAAQ,SAAS,MAAM;YAAC;QAC9G;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,QAAQ,GAAG,CAAC,qBAAqB;QACjC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAiE,GAC1E;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}