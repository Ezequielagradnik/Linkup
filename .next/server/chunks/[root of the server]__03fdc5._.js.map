{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/agrad/Documents/GitHub/Linkup/app/api/login/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\"\r\n\r\nexport async function POST(req) {\r\n  try {\r\n    const { email, password } = await req.json()\r\n\r\n    const response = await fetch(`${process.env.BACKEND_URL}/api/admin/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    })\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Invalid credentials\")\r\n    }\r\n\r\n    const data = await response.json()\r\n    return NextResponse.json(data)\r\n  } catch (error) {\r\n    console.error(\"Admin login error:\", error)\r\n    return NextResponse.json({ error: \"Invalid credentials\" }, { status: 400 })\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,GAAG;IAC5B,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;QAE1C,MAAM,WAAW,MAAM,MAAM,sEAA2B,gBAAgB,CAAC,EAAE;YACzE,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;YAAS;QACzC;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;QACpC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAsB,GAAG;YAAE,QAAQ;QAAI;IAC3E;AACF"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}